// Follow these rules for the entire grammar point.
// - Avoid Unicode escape sequences like \\u3051, just emit the Unicode.
// - No fields should be null, [], or "". Omit fields that are not applicable instead.
// - Ensure the JSON is valid and properly escaped for YAML conversion. 
// - Avoid additional formatting or code fences.
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "conjugationType": {
      "type": "string",
      "enum": [
        "causative (～させる)",
        "causative-passive (～させられる)",
        "conditional (～ば)",
        "conditional (～たら)",
        "concessive (～ても)",
        "dictionary (plain non-past)",
        "desiderative (～たい)",
        "imperative plain (～ろ/～え)",
        "imperative polite (～なさい)",
        "negative plain (～ない)",
        "negative non-past polite (～ません)",
        "negative past plain (～なかった)",
        "negative past polite (～ませんでした)",
        "non-past polite (～ます)",
        "passive (～られる/～かれる)",
        "past plain (～た)",
        "past polite (～ました)",
        "potential (～られる/～える)",
        "progressive (～ている)",
        "te-form (～て)",
        "volitional (～よう)",
        "volitional polite (～ましょう)"
      ]
    },
    "rarityType": {
      "type": "string",
      "enum": ["common","less common","uncommon","rare","very rare"]
    },
    "jlptLevel": {
      "type": "string",
      "enum": ["N5","N4","N3","N2","N1"]
    },
    "registerType": {
      "type": "string",
      "enum": [
        "casual", "formal", "semi-formal", "sonkeigo (respectful)", "kenjōgo (humble)", "teineigo (polite)", 
        "shitashii kuchō (intimate)", "bijinesu nihongo (business)", "bungo (literary)", "hōgen (dialectical)", 
        "surangu (slang)", "gun-go (military)", "wakamono kotoba (youth)", "meirei-kei no teineigo (polite imperative)"
      ]
    },
    "partOfSpeechType": {
      "type": "string",
      "enum": [
        "particle", "noun", "verb", "adjective", "adverb", "interjection", "conjunction", "pronoun",
        "auxiliary verb", "auxiliary adjective", "prefix", "suffix", "numeral", "counter", "phrase"
      ]
    },
    "particleSyntacticFunction": {
      "type": "string",
      "enum": [
        "case-marking",         // e.g., が, を, に, へ, で
        "topic",                // は
        "subject",              // が (when indicating subject)
        "object",               // を
        "indirect-object",      // に (recipient)
        "directional",          // へ, に
        "locative",             // に, で
        "temporal",             // に, から, まで (time points)
        "range",                // から, まで
        "comparative",          // より
        "limiter",              // だけ, しか, ほど, ばかり
        "conjunctive",          // が, けど, ので
        "conditional",          // なら, たら, ば
        "concessive",           // のに, けど
        "causal",               // から, ので
        "purpose",              // に (～に行く)
        "passive-agent",        // に (passive voice)
        "quotative",            // と
        "listing",              // や, とか, と
        "adverbializer",        // に (makes nouns into adverbs)
        "attributive",          // の (noun modifier)
        "vocative",             // よ (in calling out)
        "sentence-final"        // e.g., よ, ね, か, な
      ]
    },
    "particlePragmaticFunction": {
      "type": "string",
      "enum": [
        "emphasis",            // よ, ぞ, さ
        "softening",           // ね, な (in some uses)
        "confirmation",        // ね
        "assertion",           // よ
        "evidential",          // っけ (reminding oneself)
        "interrogative",       // か
        "exclamatory",         // なあ, よ (when exclaimed)
        "focus",               // も, さえ, まで
        "contrastive",         // は
        "limiting",            // しか, だけ
        "negative polarity",   // しか
        "hedging",             // かな (particle use), かも
        "intensifier",         // さえ, まで
        "discourse marker",    // よ, ね, さ, な
        "emotive",             // なあ, よね
        "agreement-seeking",   // よね, でしょう (if viewed as particle-like but better excluded)
        "tentative",           // かも, かな (used as particles)
        "vocative",            // よ (in 呼びかけ)
        "engagement",          // ね
        "sentence-final"       // Used generally for particles like よ, ね, か, な, etc.
      ]
    },
    "settingType": {
      "type": "string",
      "enum": [
        "flirty", "first-date", "professional", "academic", "humorous", "sarcastic", "serious",
        "persuasive", "apologetic", "informative", "interrogative", "storytelling", "instructional",
        "commanding", "friendly", "condescending", "supportive", "sympathetic", "inspirational",
        "intimate", "negotiating", "technical", "legal", "religious", "creative","casual slang",
        "emergency/alarm", "reflective", "optimistic", "pessimistic", "cautious", "excited", "melancholic"
      ]
    },
    
    "speakerGenderType": {
      "type": "string",
      "enum": ["male", "female"]
    },
    "listenerGenderType": {
      "type": "string",
      "enum": ["male", "female", "group", "no one"]
    },
    
    "ageType": {
      "type": "string",
      "enum": ["older","younger"]
    },
    "falseFriendKindType": {
      "type": "string",
      "enum": ["antonym","synonym","similar expression","often confused with"]
    },
    // May be a mix of japanese and english.
    "grammarType": { "type": "string" },
    // English **MUST** be a natural-sounding and grammatically correct.
    // English **MUST** use a single apostrophe (') for contractions (e.g., don't).
    // If quotes are allowed in the context, then **MUST** use double-quotes (") for quotes.
    "english": { "type": "string" },
    // Japanese **MUST** have a space between words to assist mecab in parsing. For example imamoto should be '今本' but 'ima hon' should be '今 本'.
    // Japanese **MUST** sound natural and fluent to a native speaker.
    "japanese": { "type": "string" },
    // EtymologyType **MUST** be in English.
    // If present, etymologyType **MUST** be a linguistically interesting discussion of the history of how the related element evolved.
    "etymologyType": { "type": "string" },
    "changeType": {
      "type": "string",
      "enum": [
          // A minor change that does not affect the meaning of the grammar point and doesn't satisfy a **MUST** clause somewhere.
          "suggestion", 
          // A change that makes the grammar point sound more natural in Japanese or English.
          "unnatural",  
          // A change because some part of the original didn't comply with something in this prompt.
          "violation",  
          // A change was needed to comply with the JSON schema.
          "schema", 
          // A PRIOR_COMMAND in the PRIOR_GRAMMAR_POINT that you are now addressing.    
          "command",  
          // A VIOLATING_PRIOR_COMMANDS in the PRIOR_GRAMMAR_POINT that you are now addressing. 
          "violating-command",  
          // Not a change, but a note about something you noticed. Use this to point out:
          // - contradictions in comment-commands.
          // - suggestions for improving this schema. 
          // - suggestions for improving comment commands in this schema. 
          // - suggestions for new change types.
          // - suggestions for new enum values in this schema.
          "meta" 
      ]
    }
  },
  "type": "object",
  "properties": {
    // The name of the grammar point.
    // - **MUST NOT** change this value because it is a database key.
    "grammar_point": { "$ref": "#/definitions/grammarType" },
    // ID of the grammar point.
    // - **MUST NOT** change this value because it is a database key.
    "id": { "type": "string" },
    // If the grammar point contains a verb in **dictionary form** (besides だ or です) or adjective in **dictionary form**, add a new array field at the top, called "conjugations". 
    // It should list all of the possible conjugations of grammar_point, including the grammar point itself. 
    // Only list conjugations that, when used, preserve the meaning of the grammar point. For example, if the grammar point is about the past, then don't list conjugations that aren't in the past.
    "conjugations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "conjugation-type": { "$ref": "#/definitions/conjugationType" },
          "form": { "type": "string" },
          "rarity": { "$ref": "#/definitions/rarityType" }
        },
        "required": ["conjugation-type","form","rarity"],
        "additionalProperties": false
      }
    },
    // Pronunciation of the grammar point.
    "pronunciation": {
      "type": "object",
      "properties": {
        // **MUST** be the katakana reading of the grammar point.
        // English parts, and symbols **MUST NOT** be in katakana.
        "katakana": { "type": "string" },
        // **MUST** be the romaji equivalent to katakana.
        "romaji": { "type": "string" },
        // **MAY** have a pronunciation warning (for example, "Pronounced 'o', not 'wo')
        "pronunciation_warning": { "type": "string" }
      },
      "required": ["katakana","romaji"],
      "additionalProperties": false
    },
    // You **MUST** have a 'formation' tag that describes, in psuedo-algebraic notation, the formula for creating the grammar point from its component parts.
    // For example, for the grammar point "見える", the formation could be:
    // "formation": {
    //   "[Subject が] + 見える": "Indicates that something is visible or can be seen.",
    //   "[Object に] + [Subject が] + 見える": "Indicates how something appears to someone (it seems or looks a certain way).",
    //   "[Modifier] + 見える": "Adds nuance such as 'clearly visible,' 'looks small,' etc."
    // }
    "formation": {
      "type": "object",
      "minProperties": 1,
      "additionalProperties": { "type": "string" }
    },
    "jlpt": { "$ref": "#/definitions/jlptLevel" },
    "meaning": { "$ref": "#/definitions/english" },
    "meaning_warning": { "$ref": "#/definitions/english" },
    // details key **MUST** be English.
    // **MUST NOT** delete japanese language keys, instead convert them to English.
    // **MUST** forward all details information from the source bunpro grammar point. If none of these detail properties fit perfectly, then create your own property in the form "custom-myproperty".
    "details": {
      "type": "object",
      "properties": {
        "part-of-speech": { "$ref": "#/definitions/partOfSpeechType" },
        "register": { "$ref": "#/definitions/registerType" },
        // **ONLY** if 'part-of-speech' is "particle", then you **MAY** include a "particle-syntactic-function" field.
        "particle-syntactic-function": { "$ref": "#/definitions/particleSyntacticFunction" },
        // **ONLY** if 'part-of-speech' is "particle", then you **MAY** include a "particle-type" field.
        "particle-pragmatic-function": { "$ref": "#/definitions/particlePragmaticFunction" },
        "usage-context": { "type": "string" },
        "function": { "type": "string" },
        "nuance": { "type": "string" },
        "source": { "type": "string" },
        "counterpoint": { "type": "string" },
        "colocation": { "type": "string" },
        "grammatical-role": { "type": "string" },
        "logical-flow": { "type": "string" },
        "temporal-flow": { "type": "string" },
        "spatial-flow": { "type": "string" },
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    // The "etymology" field will be display to the user in the grammar point's page.
    // It should be a linguistically interesting discussion of the history of how the grammar point evolved.
    "etymology": { "$ref": "#/definitions/etymologyType" },
    // The "writeup" field will be display to the user in the grammar point's page.
    // It should be a comprehensive explanation of the grammar point, including:
    // - How the grammar point is used in different contexts.
    // - Be primarily in English, supplemented by natural Japanese expressions as needed.
    // - Incorporate essential details from the input while rephrasing for clarity.
    // - Use markdown-style formatting (e.g., **important**).
    // - Omit any example sentences here; examples go in the "examples" array.
    // - Use double-quotes " for English quotes.
    // - You may include bullet points or sections like "Important Considerations" for clarity.
    // - Don't mention the meaning_warning if there is one.
    // - If the grammar point is primarily used by one gender, then mention that.
    // - If the grammar point is primarily used by one age group, then mention that.
    // - If the grammar point is primarily used in one region, then mention that.
    "writeup": { "$ref": "#/definitions/english" },
    // Examples that exercise the grammar point.
    // - Each example **MUST** use the grammar_point, though it may be in conjugated form.
    // - The first example **MUST** be the simplest and most common usage of the grammar point.
    // - Examples **MUST** be ordered from simplest to most complex.
    // - Examples **MUST** exhibit a wide variety of settings.
    // - If there are conjugations, examples **MUST** exhibit a wide variety of conjugations.
    // - Examples **MUST** exhibit a wide variety of registers.
    // - Examples **should** include at least one male and one female speaker_gender.
    // - Examples **MUST** include all formations.
    "examples": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          // A natural-sounding Japanese sentence using this grammar point.
          // - **MUST** have the grammar_point in {bold} (surrounded in curlies).
          // - **MUST** have spaces between words, so that it is easy to read and to parse with mecab.
          // - **MUST** be grammatically correct. We're teaching Japanese, not bad grammar.
          // - **MUST NOT** use hiragana for words that are typically written in kanji.
          // - **MUST** be just one sentence unless. Use "scene" if you need to set up context.
          // - **MUST NOT** use parentheses to set context. If necessary, use a separate "scene" field.
          // - **MUST NOT** use quotes including 「」, .
          // - **MUST** be from the point of view of a single speaker. No back-and-forth dialogue. Though you may place setup dialog in "scene" (in English).
          // - **MUST NOT** have furigana text embedded. 
          "japanese": { "$ref": "#/definitions/japanese" },
          // A natural-sounding English translation of the Japanese.
          // - Will be display to the user when they are practicing. 
          // - **MUST** be just one sentence unless. Use "scene" if you need to set up context.
          // - **MUST NOT** use parentheses to set context. If necessary, use a separate "scene" field.
          // - **MUST NOT** use quotes unless they are truly essential to the grammar point.
          "english": { "$ref": "#/definitions/english" },
          // Scene is english text that will be displayed to the user under the "english" example.
          // It sets the scene for the example and gives the user a hint about how to translate the english to japanese. 
          // "english" and "scene" will be displayed together, so "scene" **MUST NOT** repeat facts from "english". 
          // They should sound natural and not redundant when read together.
          // - First, mentally construct a set (let's call it COMPETING_GRAMMAR) of *every* other way to convert "english" 
          //   to "japanese" that _don't_ use the grammar point or that do don't comply with "speaker_gender", "listener_gender", 
          //   "speaker_age", or "register". 
          //   - **MUST** consider "false_friends" when constructing COMPETING_GRAMMAR.
          // - If COMPETING_GRAMMAR is empty, then you **MUST** omit "scene".
          // - If COMPETING_GRAMMAR is not empty, then you **MUST** have a "scene" field.
          //   - **MUST** set a scene that will hint the user toward the correct grammar point.
          //   - **MUST NOT** actually name the grammar point.
          //   - **MUST** be concise and non-repetitive.
          //   - **MUST** be interesting and engaging to the learner.
          //   - **MUST NOT** use 'male' or 'female'. Use a proper name that's clearly gendered or 'man', 'woman', 'boy', 'girl', etc.
          //   - Good examples tell a little story: 
          //      Tanaka is delivering bad news to his boss.
          //      Narumi is confessing her feelings.
          //      A waiter is taking an order from a customer.
          "scene": { "$ref": "#/definitions/english" },
          // Explanation of why "scene" was necessary.
          // - **MUST** be present if "scene" is present.
          // - **MUST** include wrong ways (for this grammar point and example) of translating "english" to "japanese" that "scene" text is trying to point the user away from.
          // - **MUST** list the exact content of COMPETING_GRAMMAR from "scene".
          "scene_rationale": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                // **MUST** be the alternate Japanese way of saying the same "english" from COMPETING_GRAMMAR.
                "competing_grammar": { "type": "string" },
                // **MUST** explain how 'scene' mitigates the chance of the user choosing that other way.
                "mitigation":       { "type": "string" }
              },
              "required": ["competing_grammar","mitigation"],
              "additionalProperties": false
            },
            "minItems": 1
          },
          "register": { "$ref": "#/definitions/registerType" },
          "setting": { "$ref": "#/definitions/settingType" },
          // Conjugation **only** if the grammar point is conjugatable, then specify which conjugation is used in this example.
          // **MUST** be present if there is a top-level "conjugations" array.
          // **MUST NOT** be present if there is no top-level "conjugations" array.
          // - The content of this "conjugation" field **MUST** be taken from the top-level list of conjugations you generated earlier. Use the 'type' field.
          // **MUST** be about the main grammar point and not other parts of the sentence. 
          "conjugation": { "$ref": "#/definitions/conjugationType" },
          // Speaker gender **MUST** be specified if the gender actually matters in the context of the spoken Japanese.
          // **MUST NOT** be specified if the spoken Japanese does not depend on the gender of the speaker.
          // You **MUST NOT** embed hints about the speaker's gender in 'english' or 'japanese'. Put that here, in "speaker_gender".
          "speaker_gender": { "$ref": "#/definitions/speakerGenderType" },
          // Listener gender **MUST** be specified if the gender actually matters in the context of the spoken Japanese.
          // **MUST NOT** be specified if the spoken Japanese does not depend on the gender of the listener.
          // Use "group" if the listener is an audience or group of people.
          // Use "no one" if the speaker is talking to themselves or no one in particular.
          "listener_gender": { "$ref": "#/definitions/listenerGenderType" },
          // speaker_age **MUST** be specified if (and only if) the gender actually matters in the context of the spoken Japanese.
          "speaker_age": { "$ref": "#/definitions/ageType" },
          // -----------------------------------------------------------------------------------------------------------------------
          // "listener_age" is deprecated. You **MUST** remove it. Use "speaker_age" of "older" or "younger" to indicate a difference.
          // "listener_age": { "$ref": "#/definitions/ageType" },
          // -----------------------------------------------------------------------------------------------------------------------
          // For nuance, explain in English with Japanese references to the sentence, how this sentence exhibits how and why
          // "speaker_age", "speaker_gender", "listener_gender", and "register" applies and what it means.
          // - If there is a "speaker_gender" or "listener_gender", then "nuance" **MUST** mention the specific Japanese, in 「quotes」, that would only be spoken by that gender. 
          // - If there is a "speaker_age", then "nuance" **MUST** mention the specific Japanese, in 「quotes」, that would only be spoken by someone of that age. 
          // - **MUST** refer to parts of the japanese sentence in「quotes」.
          // - **MUST NOT** refer to the JLPT level of the words in the japanese sentence
          // - **MUST** be English.
          "nuance": { "$ref": "#/definitions/english" },
          // Etymology of the example sentence or specific phrases in the japanese example sentence.
          // - **MUST NOT** repeat the etymology of the grammar point.
          "etymology": { "$ref": "#/definitions/etymologyType" }
        },
        "required": ["japanese","english","scene","register","setting"],
        "additionalProperties": false
      }
    },
    // You **MAY** include a "post_example_writeup" section after "examples" if more clarification is helpful, but don't reference examples by any numeric label.
    "post_example_writeup": { "type": "string" },
    // False friends are words that are often confused with the grammar point.
    // - **MUST NOT** reference other conjugations of this grammar point.
    // - **MAY** reference other grammar points that share a similar japanese construction. For example, if this grammar point is "で (by)" then "で (at)" is allowed.
    // - **MUST** include anything mentioned in COMPETING_GRAMMAR from "scene_rationale" in the examples.
    "false_friends": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          // Term is the name of the false friend (e.g., "とみえる"). 
          // Term **MUST NOT** be a conjugation of the current grammar point.
          "term": { "$ref": "#/definitions/grammarType" },
          // Meaning of the false friend in English (e.g., "to seem, to appear")
          "meaning": { "$ref": "#/definitions/english" },
          // Kind is the relationship to the main grammar point 
          "kind": { "$ref": "#/definitions/falseFriendKindType" },
          // Nuance is a concise contrast to the main grammar point (e.g., "Unlike [grammar_point], [false_friend]...").
          "nuance": { "$ref": "#/definitions/english" }
        },
        "required": ["term","meaning","kind","nuance"],
        "additionalProperties": false
      }
    },
    // Post false friends writeup is a section that will be displayed to the user after the false friends.
    // **MAY** add a "post_false_friends_writeup" to clarify further differences between the grammar point and these similar expressions. Do not call them "false friends" in that section—just provide a short explanation of how to avoid mixing them up.
    "post_false_friends_writeup": { "$ref": "#/definitions/english" },
    "sources": {
      "type": "object",
      "properties": { "bunpro": { "type": "string", "format": "uri" } },
      "additionalProperties": false
    },
    // When provided a prior version of the grammar point, and you changed something in it:
    // - **MUST** include a "change" field that lists all changes made to the grammar point.
    // - **MUST NOT** mention changes to the 'change' field, since that would be circular.
    "change": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "change-type": { "$ref": "#/definitions/changeType" },
          "change": { "$ref": "#/definitions/english" }
        },
        "required": ["change-type","change"],
        "additionalProperties": false
      }
    }
  },
  "required": [
    "grammar_point","id","pronunciation","formation","jlpt",
    "meaning","details","etymology","writeup",
    "examples","false_friends","post_false_friends_writeup"
  ],
  "additionalProperties": false
}